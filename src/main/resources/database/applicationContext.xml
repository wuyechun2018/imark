<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	
	
	<!-- 使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解。  -->
	<context:component-scan base-package="com.imark"><!-- base-package 如果多个，用“,”分隔 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!--
	根本原因：由子容器扫描装配了@Service 注解的实例。spring的context是父子容器，由ServletContextListener 加载spring配置文件产生的是父容器，
	springMVC加载配置文件产生的是子容器，子容器对Controller进行扫描装配时装配了@Service注解的实例 (@Controller 实例依赖@Service实例)，
	而该实例理应由父容器进行初始化以保证事务的增强处理，所以此时得到的将是原样的Service（没有经过事务加强处理，故而没有事务处理能力。)
	 -->
	
	<!-- Imports datasource configuration -->
	 <import resource="classpath:spring/spring-data.xml" />
	 <import resource="classpath:spring/spring-data-jdbc.xml" />
	 <import resource="classpath:spring/spring-data-jpa.xml" />

	<import resource="classpath:spring/spring-aop.xml" />
	
	
	
	<import resource="classpath:cxf/cxf-server.xml" />
	<import resource="classpath:cxf/cxf-client.xml" />


	<!--
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:appConfig.xml</value>
				<value>file:/serverdata/conf/dm/appConfig.xml</value>
			</list>
		</property>
	</bean>-->





	<!--
	<bean id="appConfig" class="com.imark.common.AppConfig">
		<property name="appTitle" value="${app.title}" />
	</bean>-->


</beans>